name: Test other Python versions

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  NIX_CONFIG: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"

jobs:
  test-version:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - macos-11
        python:
          - "3.9"

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install nix
      uses: cachix/install-nix-action@v20

    - name: Setup cachix
      uses: cachix/cachix-action@v12
      with:
        name: geonix
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Set new project directory
      run: |
        echo "TEMPLATE_PROJECT_DIR=$(dirname $GITHUB_WORKSPACE)/template-project" >> $GITHUB_ENV

    - name: Prepare new project directory
      run: |
        mkdir $TEMPLATE_PROJECT_DIR

    - name: Create new flake project
      run: |
        git init

        nix flake init --accept-flake-config --template ${GITHUB_WORKSPACE}#workspace

        git add flake.nix
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}

    - name: Point Geonix input to the local source code directory
      run: |
        sed -i.orig "s|geonix.url = \".*\";|geonix.url = \"path:${GITHUB_WORKSPACE}\";|" flake.nix

        nix --access-tokens github.com=${{ secrets.GITHUB_TOKEN }} flake update
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}

    - name: Disable some packages in development shell
      run: |
        sed -i.orig "s|pkgs.geonix.geos|# pkgs.geonix.geos|" flake.nix
        sed -i.orig "s|pkgs.geonix.pdal|# pkgs.geonix.pdal|" flake.nix
        sed -i.orig "s|pkgs.geonix.proj|# pkgs.geonix.proj|" flake.nix
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}

    - name: Set Python version
      run: |
        version=$(echo "python${{ matrix.python }}" | sed "s|\.||")
        sed -i.orig "s|pythonVersion.*=.*|pythonVersion = \"$version\";|" flake.nix
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}

    - name: Flake check
      run: >
        nix flake check --no-build --accept-flake-config
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}

    - name: Prepare development shell environment
      run: >
        nix develop --command echo OK
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}

    - name: Test Python version
      run: >
        nix develop --command python --version
        | grep "Python ${{ matrix.python }}"
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}

    - name: Test Python version reported by Fiona
      run: >
        nix develop --command python -c "import fiona; print(fiona.platform.python_version())"
        | grep "${{ matrix.python }}"
      working-directory: ${{ env.TEMPLATE_PROJECT_DIR }}
