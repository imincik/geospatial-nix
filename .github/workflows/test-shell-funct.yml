name: Test shell functions

on:
  workflow_call:

env:
  NIX_CONFIG: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"

jobs:
  test-function:
    strategy:
      fail-fast: false
      matrix:
        shell:
          - dev
          - postgresql
          - pgadmin
          - python
        os:
          - ubuntu-22.04
          # - macos-11

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    # Low limit on unix socket path length is causing the problems with PostgreSQL shell.
    - name: Move source code on shorter path
      run: |
        mv $GITHUB_WORKSPACE /home/runner/work/geonix
        mkdir -p $GITHUB_WORKSPACE

    - name: Install nix
      uses: cachix/install-nix-action@v23

    - name: Flake check
      run: >
        nix flake check --no-build --accept-flake-config
      working-directory: /home/runner/work/geonix/tests/shells


    # dev shell
    - name: Test shell environment (if dev shell)
      run: >
        nix develop --accept-flake-config .#dev
        --command tig --version
        | grep "tig version"
      if: ${{ matrix.shell == 'dev' }}
      working-directory: /home/runner/work/geonix/tests/shells


    # postgresql shell
    - name: Launch shell environment (if postgresql shell)
      run: >
        nix develop --accept-flake-config .#postgresql
        --command echo &
      if: ${{ matrix.shell == 'postgresql' }}
      working-directory: /home/runner/work/geonix/tests/shells

    - name: Wait until shell is ready (if postgresql shell)
      run: >
        nix develop --accept-flake-config .#ci
        --command timeout 300 sh -c 'until nc -z localhost 15432; do sleep 1; done'
      if: ${{ matrix.shell == 'postgresql' }}
      working-directory: /home/runner/work/geonix/tests/shells

    - name: Test shell environment (if postgresql shell)
      run: >
        nix develop --accept-flake-config .#psql
        --command psql -c 'CREATE EXTENSION postgis; SELECT postgis_full_version();'
        | grep "POSTGIS="
      if: ${{ matrix.shell == 'postgresql' }}
      working-directory: /home/runner/work/geonix/tests/shells


    # pgadmin shell
    - name: Launch shell environment (if pgadmin shell)
      run: >
        nix develop --accept-flake-config .#pgadmin
        --command echo &
      if: ${{ matrix.shell == 'pgadmin' }}
      working-directory: /home/runner/work/geonix/tests/shells

    - name: Wait until shell is ready (if pgadmin shell)
      run: >
        nix develop --accept-flake-config .#ci
        --command timeout 300 sh -c 'until nc -z localhost 15050; do sleep 1; done'
      if: ${{ matrix.shell == 'pgadmin' }}
      working-directory: /home/runner/work/geonix/tests/shells

    - name: Test shell environment (if pgadmin shell)
      run: >
        curl --retry 10 --retry-all-errors --head localhost:15050/browser/
        | grep "HTTP/1.1 200 OK"
      if: ${{ matrix.shell == 'pgadmin' }}
      working-directory: /home/runner/work/geonix/tests/shells


    # python shell
    - name: Test shell environment (if python shell)
      run: >
        nix develop --accept-flake-config .#python
        --command python -c "import fiona; print(fiona.supported_drivers)"
      if: ${{ matrix.shell == 'python' }}
      working-directory: /home/runner/work/geonix/tests/shells
