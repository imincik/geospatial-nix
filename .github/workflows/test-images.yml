name: Test container images

on:
  pull_request:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  NIX_CONFIG: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"

jobs:
  test-image:
    strategy:
      fail-fast: false
      matrix:
        image:
          - geonix-base-image
          - geonix-postgresql-image
          - geonix-python-image
        os:
          - ubuntu-22.04

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install nix
      uses: cachix/install-nix-action@v20

    - name: Build image
      run: >
        nix build --accept-flake-config .#${{ matrix.image }}

    - name: Test image (if geonix-base-image)
      run: |
        docker load < result

        docker run geonix-base nix-shell -p nix-info --run "nix-info -m"
      if: ${{ matrix.image == 'geonix-base-image' }}

    - name: Test image (if geonix-postgresql-image)
      run: |
        docker load < result

        docker run -d -u "$(id -u):$(id -g)" -v "$(pwd):/data" -p 15432:5432 geonix-postgresql

        nix develop .#ci \
        --command psql -U postgres -h localhost -p 15432 -c 'CREATE EXTENSION postgis; SELECT postgis_full_version();'
      if: ${{ matrix.image == 'geonix-postgresql-image' }}

    - name: Test image (if geonix-python-image)
      run: |
        docker load < result

        docker run -u "$(id -u):$(id -g)" geonix-python -c "import fiona; print(fiona.supported_drivers)"
      if: ${{ matrix.image == 'geonix-python-image' }}
