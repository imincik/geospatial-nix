name: Test custom packages build

on:
  workflow_call:

env:
  NIX_CONFIG: "access-tokens = github.com=${{ secrets.GITHUB_TOKEN }}"

jobs:
  test-build:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-22.04
          - macos-11

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install nix
      uses: cachix/install-nix-action@v20

    - name: Setup cachix
      uses: cachix/cachix-action@v12
      with:
        name: geonix
        authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

    - name: Flake check
      run: >
        nix flake check --no-build --accept-flake-config
      working-directory: tests/custom-packages


    - name: Prepare development shell environment
      run: >
        nix develop --accept-flake-config --command echo OK
      working-directory: tests/custom-packages

    - name: Generate override template file
      run: >
        nix develop --command geonix override
      working-directory: tests/custom-packages

    - name: Enable overrides template file in getPackages function
      run: |
        sed -i.orig "s|#.overridesFile.*=.*./overrides.nix;|overridesFile = ./overrides.nix;|" flake.nix
        git add overrides.nix
      working-directory: tests/custom-packages


    # Custom GDAL
    - name: Add custom GDAL patch to override template file
      run: |
        patch -u overrides.nix -i ${GITHUB_WORKSPACE}/tests/custom-packages/gdal.patch
      working-directory: tests/custom-packages

    - name: Flake check
      run: >
        nix flake check --no-build --accept-flake-config
      working-directory: tests/custom-packages

    - name: Build and test patched GDAL package
      run: |
        nix develop --accept-flake-config --command gdalinfo --help | grep "THIS IS MY PATCH"
      working-directory: tests/custom-packages

    - name: Test if only single GDAL dependency exists in dev shell
      run: |
        system=$(nix eval --impure --raw --expr 'builtins.currentSystem')
        nix path-info --derivation --recursive $(nix eval --raw .\#devShells."$system".dev) \
        | grep gdal \
        | wc -l \
        | sed -e 's/^[[:space:]]*//' \
        | grep -E "^1$"
      working-directory: tests/custom-packages

    - name: Test if dev shell depends on patched GDAL package
      run: |
        system=$(nix eval --impure --raw --expr 'builtins.currentSystem')
        nix path-info --derivation --recursive $(nix eval --raw .\#devShells."$system".dev) \
        | grep gdal-1000.0.0
      working-directory: tests/custom-packages
